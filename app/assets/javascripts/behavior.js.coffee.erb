window.ui_rebind_application_events  = ($) ->
  $('.ui.dropdown').dropdown(placeholder: false)
  $('.ui.accordion').accordion()
  $('.ui.dynamic.menu .item').tab()
  $('.course.units .ui.sidebar').sidebar(
    context: $('.course.units > .bottom.segment')
  ).sidebar('attach events', '.course.units > .menu > .item')
  $('.course.klasses .ui.sidebar').sidebar(
    context: $('.course.klasses > .bottom.segment')
  ).sidebar('attach events', '.course.klasses > .menu > .item')

  $('.message .close').on 'click', ->
    $(this).closest('.message').transition('fade')
    
  $('div.markdown-output img').addClass('ui image')
  
  $('.ui.embed').embed(autoplay: $('.ui.embed').data('autoplay'))
  
  # Settings
  $('.add-in-modal, .edit-in-modal').unbind().on 'click', (e) ->
    html = $(this).data('form')
    $(html).modal(inverted: true).modal('show')
    
  $('.confirm-first').unbind().on 'click', ->
    $(""" 
      <div class="ui modal">
        <div class="header">#{$(this).data('header')}</div>
        <div class="content">#{$(this).data('content')}</div>
        <div class="actions">
          #{$(this).data('action')}
          <div class="ui button cancel">#{$(this).data('cancel')}</div>
        </div>
      </div>""").modal(inverted: true).modal('show')

  # markdown
  $('.wmd-input').each(ui_markdown_control)

  # Shortening text during display
  $('.shortenable-text').shorten(
    showChars: '200',
    moreText: '<i class="chevron down icon" title="more..."></i>more...',
    lessText: '<i class="chevron up icon" title="less..."></i>less...'
  )
  
  $('#assessment-attempt-form > #attempt-save-link').unbind().on 'click', (e) ->
    $('#assessment-attempt-form > #commit').val('save')
    $('#assessment-attempt-form').submit()
    e.preventDefault()
  
  $('.ui.progress').progress()
  
  # $('.home.item').popup(
  #   inline: true,
  #   hoverable: true,
  #   position: 'bottom left',
  #   delay:
  #     show: 300,
  #     hide: 800
  # )
  
  # ace-editor
  $('.ace-editor').each (index, element) ->
    editor = ace.edit(element)
    editor.setTheme("ace/theme/#{$(element).data('theme')}")
    editor.getSession().setMode("ace/mode/#{$(element).data('mode')}")
    editor.getSession().setTabSize(2)
    editor.getSession().setUseSoftTabs(true)
    readonly = $(element).data('readonly')
    editor.setReadOnly(readonly)
    unless readonly
      $(element).closest('form').submit ->
        $(this).find("##{$(element).data('input')}").val(editor.getSession().getValue())

  $('.hidden-til-processed').show()

  $('.video-open-link').unbind().on 'click', (e) ->
    vid = "v_m_#{$(this).data('id')}"
    player = $(this).data('player')
    
    if player == 'youtube'
      video = """
        <div class="ui embed" data-source="youtube" data-id="#{$(this).data('url')}"></div>
      """
    else
      video = """
        <div class="ui embed">
        <video id="#{vid}" class="video-js vjs-default-skin vjs-big-play-centered" width="640px" height="267px"
            controls preload="none" src="#{$(this).data('url')}"
            data-setup='{ "aspectRatio":"1280:720", "playbackRates": [1, 1.5, 2] }'>
        </video>
        </div>
      """
    $("""
      <div id="open-video-modal" class="ui modal">
        <div class="header">#{$(this).data('title')}</div>
        <div class="content">
          #{video}
        </div>
        <div class="actions">
          <div class="ui cancel button">Close</div>
        </div>
      </div>
    """).modal(
      inverted: true,
      onVisible: ->
        $('.ui.embed').embed()
        videojs("#{vid}", { "controls": true, "autoplay": false, "preload": "none" }) unless player == 'youtube'
      onHidden: ->
        videojs("#{vid}").dispose() unless player == 'youtube'
        $('#open-video-modal').remove()
    ).modal('show')

    e.preventDefault()

  # Klasses
  $('#search_klasses_form').find(":checkbox").unbind().on 'click', ->
    $(this).closest('form').submit()
    $(this).closest('form').find('input:checkbox').prop('disabled', true)

  # Assessments
  $('#assessment_penalty').closest('.field').hide() unless $('#assessment_after_deadline').is(':checked')

  $('#assessment_after_deadline').unbind().on 'click', ->
    if $(this).is(':checked')
      $('#assessment_penalty').closest('.field').show()
    else
      $('#assessment_penalty').val(0.0)
      $('#assessment_penalty').closest('.field').hide()

  show_hide_answer_fields =  (val)->
    if val != null and val.indexOf("survey") != -1 and $("#question_kind").val() != "match"
      $(".answer-field").hide()
    else
      $(".answer-field").show()

  $('#question_bank_list').unbind().on 'change', ->
    show_hide_answer_fields($(this).val())

  if $('#question_bank_list').length > 0
    show_hide_answer_fields $('#question_bank_list').val()

  # Making units and lectures dynamic
  all_lectures = $('#assessment_lecture_id').html()
  $('[id ^=assessment_q_selectors_attributes][id $=lecture_id]').each ->
    if $(this).find('option').length <= 1
      $(this).parent().hide()
    else
      $(this).parent().show()

  $('[id ^=assessment_q_selectors_attributes][id $=unit_id]').unbind().on 'change', ->
    uid = $(this).attr('id')
    lid = $(this).closest('.removable').find('[id ^=assessment_q_selectors_attributes][id $=lecture_id]').attr('id')
    unit = $("##{uid} :selected").text()
    options = $($('#assessment_lecture_id').html()).filter("optgroup[label='#{unit}']").html()
    if options
      $("##{lid}").html('<option value=""></option>' + options)
      $("##{lid}").parent().show()
    else
      $("##{lid}").empty()
      $("##{lid}").parent().hide()

  make_fields_removable = (event) ->
    $(this).prev('input[type=hidden]').val('1')
    if $(this).data('opr') == 'remove'
      $(this).closest('.removable').remove()
    else
      $(this).closest('.removable').hide()
    number_fields()
    event.preventDefault()

  number_fields = () ->
    if $('.field-container .removable .control-label span').length >= 1
      $('.field-container .removable .control-label span').each (index, element) ->
        a = $(element).text().split(' ')
        if a[a.length - 1].match(/\d+/)
          text = a[0...(a.length - 1)].join(' ')
        else
          text = a.join(' ')

        $(element).text("#{text} #{index + 1}" )

  $('.remove_fields').unbind().on 'click', make_fields_removable

  $('.add_fields').unbind().on 'click', (event) ->
    time = new Date().getTime()
    regexp = new RegExp($(this).data('id'), 'g')
    $('.field-container').append($(this).data('fields').replace(regexp, time))
    $('.remove_fields').unbind().on 'click', make_fields_removable
    $('.field-container .removable .order-field').each (index) ->
      @value = index + 1

    $('[id ^=assessment_q_selectors_attributes][id $=lecture_id]').each ->
      if $(this).find('option').length <= 1
        $(this).parent().hide()
      else
        $(this).parent().show()

    $('[id ^=assessment_q_selectors_attributes][id $=unit_id]').unbind().on 'change', ->
      uid = $(this).attr('id')
      lid = $(this).closest('.removable').find('[id ^=assessment_q_selectors_attributes][id $=lecture_id]').attr('id')
      unit = $("##{uid} :selected").text()
      options = $($('#assessment_lecture_id').html()).filter("optgroup[label='#{unit}']").html()
      if options
        $("##{lid}").html('<option value=""></option>' + options)
        $("##{lid}").parent().show()
      else
        $("##{lid}").empty()
        $("##{lid}").parent().hide()

    if $('#question_bank_list').length > 0
      show_hide_answer_fields $('#question_bank_list').val()

    number_fields()
    $('.ui.dropdown').dropdown()
    event.preventDefault()

  number_fields()

  # Questions
  # 2: Making units and lectures dynamic
  all_lectures = $('#question_unit_lectures').html()

  $('#question_unit_id').unbind().on 'change', ->
    uid = $(this).attr('id')
    lid = "question_lecture_id"
    unit = $("##{uid} :selected").text()
    options = $(all_lectures).filter("optgroup[label='#{unit}']").html()
    if options
      $("##{lid}").html('<option value=""></option>' + options)
    else
      $("##{lid}").html('<option value=""></option>')

  $('.include-in-assessment').unbind().on 'click', (e) ->
    $(this).closest('form').submit()

  $('.include-in-lecture').unbind().on 'click', (e) ->
    $(this).closest('form').submit()

  # Updates
  show_hide_update_fields_by_kind = (www, email, sms) ->
    if $(www).is(':checked') or $(email).is(':checked')
      $('#update_subject').closest('.field').show()
    else
      $('#update_subject').val(null)
      $('#update_subject').closest('.field').hide()

  #show_hide_update_fields_by_kind($(this).find('option:selected').val())
  show_hide_update_fields_by_kind($('#update_www'), $('#update_email'), $('#update_sms'))
  $('#update_www, #update_email, #update_sms').unbind().on 'change', ->
    show_hide_update_fields_by_kind($('#update_www'), $('#update_email'), $('#update_sms'))

  # loading and sorting units and lectures {
  # $('.panel-collapse.unit').unbind('show.bs.collapse').on 'show.bs.collapse', ->
  #   if $(this).data('active') == 0
  #     $.get($(this).data('update-url'))
  #     $(this).data('active', '1')

  # Sortables
  $('#sortable-units').sortable(
    axis: 'y'
    update: ->
      $.post($(this).data('update-url'), $(this).sortable('serialize'))
  )

  $('.sortable').sortable(
    axis: 'y'
    update: ->
      sortid = 'id'
      child = $(this).children(":first")
      if child? && child.attr('sortid')?
        sortid = 'sortid'
      $.post($(this).data('update-url'), $(this).sortable('serialize', {'attribute': sortid}))
  )

  $('.sortable .lecture').unbind().on 'click', ->
    if $("#lecture-#{$(this).data('lecture')}").length == 0
      $.get($(this).data('update-url'))
    else
      $("#sortable-lectures-#{$(this).data('unit')} .lecture").removeClass("active")
      $(this).addClass("active")

  $('.unit .nav-tabs a[data-toggle="tab"]').unbind('shown.bs.tab').on 'shown.bs.tab', (e) ->
    unit = $(this).data('unit')
    $(".unit-#{unit}-new-link").hide()
    $($(this).attr('href') + '-new').show()

  $('.klass a[data-toggle="tab"]').unbind('shown.bs.tab').on 'shown.bs.tab', (e) ->
    klass = $(this).data('klass')
    $(".klass-#{klass}-new-link").hide()
    $($(this).attr('href') + '-new').show()
  # } loading and sorting units and lectures

  $(".timepicker").timepicker({timeFormat: "HH:mm", timezoneList: [{ value: 180, label: 'Mecca'}]})
  $(".datepicker").datepicker({dateFormat: "yy-mm-dd"})
  $(".datetimepicker").datetimepicker({dateFormat: "yy-mm-dd", timeFormat: "HH:mm", timezoneList: [{ value: 180, label: 'Mecca'}]})

  # Reply to posts
  $('.reply-to-post').unbind().on 'click', (event) ->
    post_id = $(this).data('post-id')
    if $("#reply-to-post-#{post_id}").is(':hidden')
      $("#reply-to-post-#{post_id}").show()
      $(this).text($(this).data('cancel-btn'))
    else
      
      $("#reply-to-post-#{post_id}").hide()
      $(this).text($(this).data('reply-btn'))

  $(".timepicker").timepicker({timeFormat: "HH:mm", timezoneList: [{ value: 180, label: 'Mecca'}]})
  $(".datepicker").datepicker({dateFormat: "yy-mm-dd"})
  $(".datetimepicker").datetimepicker({dateFormat: "yy-mm-dd", timeFormat: "HH:mm", timezoneList: [{ value: 180, label: 'Mecca'}]})

  # Questions hints and explanations
  $('.question-hint-link, .question-explanation-link').unbind().on 'click', (e) ->
    if $($(this).attr('href')).is(':hidden')
      $($(this).attr('href')).show()
      $(this).removeClass('basic')
    else
      $($(this).attr('href')).hide()
      $(this).addClass('basic')

    e.preventDefault()

  $('.sortable-question-sort').sortable(
    axis: 'y'
    update: ->
      qid = $(this).data('question')
      $(this).find('input[type=hidden]').each (index, element) ->
        $(element).attr('id', "attempt_#{qid}_#{index + 1}")
        $(element).attr('name', "attempt[#{qid}][#{index + 1}]")
        #$(element).val("#{index + 1}")
  )

  set_lecture_pager_position = (pos) ->
    $(".lecture-pager .lecture-pager-link").hide()
    $(".lecture-pager a.lecture-pager-link-pos-#{pos - 1}").html($('.lecture-pager').data('prev'))
    $(".lecture-pager .lecture-pager-link-pos-#{pos - 1}").removeClass("next")
    $(".lecture-pager .lecture-pager-link-pos-#{pos - 1}").addClass("previous")
    $(".lecture-pager .lecture-pager-link-pos-#{pos - 1}").show()
    $(".lecture-pager a.lecture-pager-link-pos-#{pos + 1}").html($('.lecture-pager').data('next'))
    $(".lecture-pager .lecture-pager-link-pos-#{pos + 1}").removeClass("previous")
    $(".lecture-pager .lecture-pager-link-pos-#{pos + 1}").addClass("next")
    $(".lecture-pager .lecture-pager-link-pos-#{pos + 1}").show()
    $(".lecture-content-links a").removeClass("current")
    $(".lecture-content-links .lecture-content-link-pos-#{pos}").addClass("current")
    if mark_as_taken
      $(".lecture-content-links .lecture-content-link-pos-#{pos}").addClass("active")

  # $('.btn-popover').hover(
  #   (e) ->
  #     $(this).find('i.fa').html('&nbsp;&nbsp;' + $(this).data('content'))
  #   (e) ->
  #     $(this).find('i.fa').html('')
  # )

  $('.show_lecture_question_answer').unbind().on 'click', (e) ->
    $(this).closest('.attempt-question').find('.question-answer div').show()
    e.preventDefault()

  set_lecture_pager_position(lecture_pager_position) if lecture_pager_position?

  $('#multi_new_medium').fileupload
    dataType: "script"
    add: (e, data) ->
      types = new RegExp("(\.|\/)(#{$('#multi_new_medium').data('extensions')})$", 'i')
      file = data.files[0]
      if types.test(file.type) || types.test(file.name)
        data.context = $(tmpl("template-upload", file))
        $('#multi_new_medium').append(data.context)
        data.submit()
      else
        alert("#{file.name} is not of a supported file type.")
    progress: (e, data) ->
      if data.context
        progress = parseInt(data.loaded / data.total * 100, 10)
        data.context.find('.ui.indicating.progress').data('percent', progress).progress()

  # $('tr.medium-content').hover(
  #   (e) ->
  #     $(this).find('.medium-url').show()
  #   (e) ->
  #     $(this).find('.medium-url').hide()
  # )

  display_sketchpad = (container, id, bg) ->
    html = """
      <div class="ui top attached menu">
        <div class="down item">Colors:</div>
        <a href="##{id}" data-color="#f00" class="item" style="background: #f00;">&nbsp;</a>
        <a href="##{id}" data-color="#ff0" class="item" style="background: #ff0;">&nbsp;</a>
        <a href="##{id}" data-color="#0f0" class="item" style="background: #0f0;">&nbsp;</a>
        <a href="##{id}" data-color="#0ff" class="item" style="background: #0ff;">&nbsp;</a>
        <a href="##{id}" data-color="#00f" class="item" style="background: #00f;">&nbsp;</a>
        <a href="##{id}" data-color="#f0f" class="item" style="background: #f0f;">&nbsp;</a>
        <a href="##{id}" data-color="#000" class="item" style="background: #000;">&nbsp;</a>
        <a href="##{id}" data-color="#fff" class="item" style="background: #fff;">&nbsp;</a>
        <div class="down item">&nbsp;&nbsp;&nbsp;Strokes:</div>
        <a href="##{id}" data-size="3" class="item">3</a>
        <a href="##{id}" data-size="5" class="item">5</a>
        <a href="##{id}" data-size="10" class="item">10</a>
        <a href="##{id}" data-size="15" class="item">15</a>
        <div class="right menu">
          <a href="##{id}" data-tool="marker" class="item" title="Marker">
            <i class="paint brush icon"></i>
          </a>
          <a href="##{id}" data-tool="eraser" class="item" title="Eraser">
            <i class="erase icon"></i>
          </a>
          <a href="##{id}" data-download="png" class="item" title="Download">
            <i class="download icon"></i>
          </a>
        </div>
      </div>
      <div class="ui attached segment">
        <canvas id="#{id}" height="400" style="#{bg}"></canvas>
      </div>
    """
    $(container).html(html)
    $("##{id}").sketch()

  $('.sketchpad-able').each ->
    if $(this).data('background')
      bg = "background: url(#{$(this).data('background')}) no-repeat center center;"
    else
      bg = ''
    display_sketchpad($(this), $(this).data('id'), bg)
    $("##{$(this).data('id')}").css({'width': '100%', 'height': '400'})

  MathJax.Hub.Queue(["Typeset",MathJax.Hub]) if MathJax?

  # Klass agreement
  force_agreement_to_klass_enrollment = (ch) ->
    if $(ch).is(':checked')
      $(ch).closest('form').find('button').attr('disabled', false)
    else
      $(ch).closest('form').find('button').attr('disabled', true)

  force_agreement_to_klass_enrollment($("#agreed_to_klass_enrollment"))

  $("#agreed_to_klass_enrollment").unbind().on 'change', ->
    force_agreement_to_klass_enrollment($(this))


  # Card dimmer - semantic-ui
  $('.image.dimmable').dimmer(on: 'hover')

  # Use modal do get value of a field
  # $('.ui-modal-field').unbind().on 'click', ->
  #   id = $(this).data 'field'
  #   body= $(this).data 'body'
  #   body = body.replace(new RegExp(id, 'g'), "#{id}-#{id}")
  #   #body = body.replace(/\\\"/g, "\"").replace(/\\\//g, "/")
  #   header = $(this).data 'header'
  #   btn = $(this).data 'btn'
  #   close = $(this).data 'close'
  #   value = $("##{id}").val()
  #   $("""
  #     <div class="ui small modal">
  #       <div class="header">#{header}</div>
  #       <div class="content">
  #         #{body}
  #       </div>
  #       <div class="actions">
  #         <a href="#" class="ui primary ok button" onclick="alert('#{id}--' + $('##{id}-#{id}').val());$('##{id}').val($('##{id}-#{id}').val());">#{btn}</a>
  #         <div class="ui cancel button">#{close}</div>
  #       </div>
  #     </div>
  #   """).modal(inverted: true).modal('show')
  #
  #   return false
  #
  # Media
  # show_hide_path_or_url = (ch) ->
  #   if $(ch).is(':checked')
  #     $('#new_medium #medium_path').val('')
  #     $('#new_medium #medium_path').closest('.form-group').hide()
  #     $('#new_medium #medium_url').closest('.form-group').show()
  #     $('#new_medium #medium_source').closest('.form-group').show()
  #   else
  #     $('#new_medium #medium_url').val('')
  #     $('#new_medium #medium_url').closest('.form-group').hide()
  #     $('#new_medium #medium_source').closest('.form-group').hide()
  #     $('#new_medium #medium_path').closest('.form-group').show()
  #
  # show_hide_path_or_url($('#new_medium #medium_is_a_link'))
  #
  # $('#new_medium #medium_is_a_link').unbind().on 'click', ->
  #   show_hide_path_or_url($(this))
  #
  # show_hide_klass_settings = (ch) ->
  #   if $(ch).is(':checked')
  #     $("#klass_previewed").prop( "checked", false);
  #     $('#klass_previewed').closest('.form-group').hide()
  #     $("#klass_allow_enrollment").prop( "checked", true);
  #     $('#klass_allow_enrollment').closest('.form-group').hide()
  #   else
  #     $('#klass_previewed').closest('.form-group').show()
  #     $('#klass_allow_enrollment').closest('.form-group').show()
  #
  # show_hide_klass_settings($('#klass_private'))
  #
  # $('#klass_private').unbind().on 'click',  ->
  #   show_hide_klass_settings($(this))
  
  # mediaelementjs
  # $('video.mediaelementjs, audio.mediaelementjs').mediaelementplayer()

  # $('audio.mediaelementjs').mediaelementplayer()
  # video_el = $('video.mediaelementjs')
  # video_el.attr('width', video_el.parent().width()).attr('height', video_el.parent().width() * 9 / 16).mediaelementplayer()
  #
  #
  # player = null
  # $('video.mediaelementjs_with_invideo_quiz').mediaelementplayer(
  #   success: (element, node) ->
  #     window.player = element
  #
  #     launchAssessments = ->
  #       for assessment in assessments
  #         position = window.player.currentTime
  #         if !assessment.taken && assessment.at <= position
  #           window.player.pause()
  #           $.ajax(
  #             type: "GET",
  #             url: assessment.path,
  #             sucess: (data) ->,
  #             error: (data)->
  #           )
  #           assessment.taken = true
  #
  #     interval = setInterval(launchAssessments, 2000)
  # )
  

jQuery ->
  ui_rebind_application_events jQuery
