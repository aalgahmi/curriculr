<%= ui_header @assessment.name, subtext: @assessment.kind, action: course_breadcrumbs(Assessment.model_name.human)%>

<%= ui_buttons([
      link(:assessment, :edit, [:edit, @req_objects].flatten, remote: true, class: 'ui positive button'),
  		link(:assessment, @assessment.ready ? :unready : :ready, [@req_objects,
        { :opr => :ready, :'assessment[ready]' => !@assessment.ready }].flatten, :method => :put, 
          class: 'ui secondary button'),
      nil,
      link(:assessment, :destroy, @req_objects, method: :delete, confirm: true, class: 'ui negative button')
      ], class: 'right floated')
%><br><br>

<% if @assessment && !@assessment.new_record? %>
  <div id="assessment-ready-indicator" class="ui warning message" style=" <%= 'display: none;' if @assessment.ready %>">
    <%= t('page.text.unready_assessment_html', link: link(:assessment, :ready, [@req_objects,
          { :opr => :ready, :'assessment[ready]' => !@assessment.ready }].flatten,
          :method => :put)) %>
  </div>
<% end %>

<%# markdown(@assessment.about) %>
<%= form_for [:teach,@course, @unit, @lecture, @assessment] do |f| %>
  <div class="three fields">
    <%= f.static :based_on, value: l(@assessment.based_on) %>
    <%= f.static :from_datetime, value: l(@assessment.from_datetime) %>
    <%= f.static :to_datetime, value: @assessment.to_datetime ? l(@assessment.to_datetime) : nil %>
  </div>
  <% if @assessment.kind != 'survey' %>
    <div class="three fields">
      <%= f.static :allowed_attempts, value: @assessment.allowed_attempts || t('page.text.unlimited') %>
      <%= f.static :multiattempt_grading, value: t("config.assessment.multiattempt_grading.#{@assessment.multiattempt_grading}") %>
      <%= f.static :droppable_attempts %>
    </div>
    <div class="three fields">
      <%= f.static :after_deadline, value: t("page.text.#{@assessment.after_deadline ?  'yes' :  'no'}") %>
      <%= f.static :penalty %>
      <%= f.static :show_answer, value: t("config.assessment.show_answer.#{@assessment.show_answer}") %>
    </div>
    <% if @assessment.lecture && @assessment.invideo_id && (invideo = Material.find_by(id: @assessment.invideo_id)) %>
      <div class="three fields">
        <%= f.static :invideo_id, value: invideo.medium.name  %>
        <%= f.static :invideo_at %>
      </div>
    <% end%>
  <% else %>
    <%= f.static :event_list, value: t("config.assessment.survey_events.#{@assessment.event_list}") %>
  <% end %>
<% end %>

<%= form_for [:teach, @course, @unit, @lecture, @assessment] do |f| %>
  <div style="display: none;">
    <%= f.grouped_collection_select :lecture_id, @course.units, :lectures, :name, :id, :name, include_blank: true %>
  </div>

  <% action = content_tag :div, class: "ui buttons" do %>
    <% if @assessment.kind != 'survey' %>
      <%= link_to_add_q_selectors(t('helpers.submit.add_selector', :name => QSelector.model_name.human).html_safe, f, :q_selectors) %>

      <div class="or"></div>
    <% end %>

    <%= link(:question, :add_question, question_bank_path(:index, :all, @assessment), :class => "ui positive button") %>
    <div class="or"></div>
    <%= link(:assessment, :preview, [:preview, @req_objects].flatten, class: "ui button")%>
  <% end %>

  <%= ui_header Question.model_name.human(count: 3), action: action %>

  <div class="field-container sortable-selector sortable" data-update-url="<%= url_for([:sort_q_selector, :teach, @course, @unit, @lecture, @assessment]) %>">
    <%= f.fields_for :q_selectors do |s| %>
      <div class='removable' id="q_selector_<%= s.object.id %>">
        <%= render "fields_4_q_selector", :f => s %>
      </div>
    <% end %>
  </div>
  <p><%= content_tag :small, t('page.text.drag_items_to_reorder_html') if @assessment.q_selectors_count > 1 %></p>

  <%= f.submit :update %>
  <%= f.cancel assessment_redirect_path %>
  </div>
<% end %>
