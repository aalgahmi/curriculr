<%
  r = nil
  r_label = if local_assigns[:result].present?
    r = t("page.text.#{result}")

    case result
    when :correct
      'ui left pointing green label'
    when :partially_correct
      'ui left pointing yellow label'
    when :incorrect
      'ui left pointing red label'
    else
      ''
    end
  end

  has_header = if @assessment
    local_assigns[:question_counter].present? && (@assessment.kind != 'survey' || @assessment.questions_count > 1)
  else
    local_assigns[:question_counter].present?
  end
%>

<div class="card">
  <div class="content">
    <% if has_header %>
      <%= content_tag :div, class: "header" do %>
        <%= %(#{Question.model_name.human} #{question_counter + 1}) %>
        <%= content_tag :div, r, class: r_label if r.present? %>

        <% unless @q_selector || @assessment || local_assigns[:no_options] %>
          <%= ui_buttons([
                link(:question, :edit, [:edit, :teach, @course, @unit, @lecture, question], remote: true, class: "ui positive button"),
                link(:question, :destroy, [:teach, @course, @unit, @lecture, question],
                  method: :delete, confirm: true, class: "ui negative button")
              ], class: 'mini right floated') %>
        <% else %>
           <%= render 'teach/questions/preamble', :q => question, :show_answer => show_answer %>
        <% end %>
      <% end %>
      <% if question.points.present? && question.points > 0 %>
        <%= content_tag :div, t('page.text.points', :count => question.points), class: 'meta' %>
      <% end %>
    <% end %>
    <div class="description">
      <%= content_tag :div, id: "question_#{question.id}" do %>
        <%= render "teach/questions/#{question.kind}", :q => question,
          :a => local_assigns.has_key?(:answer) ? answer : question.answer,
          :read_only => local_assigns.has_key?(:read_only) ? read_only : !@assessment.blank?,
          :show_answer => show_answer %>
      <% end %>
    </div>
  </div>
  <% if local_assigns[:question_counter].present? && (@q_selector || question.unit.present?) %>
    <% if @q_selector # During selecting questions to add to assessment %>
      <%= content_tag :div, class: 'extra content' do %>
        <%= render partial: 'q_selector_form', locals: {
              q_selector: @assessment.q_selectors.where(question_id: question.id).first || QSelector.new,
              question: question
            } %>
      <% end%>
    <% else %>
      <% if @course && question.lecture.present? && staff?(current_user, @course) %>
        <%= content_tag :div, class: 'extra content' do %>
          <%= render partial: 'teach/questions/include_in_lecture_form', locals: { question: question } %>
        <% end %>
      <% end%>
    <% end %>
  <% end %>
</div>
