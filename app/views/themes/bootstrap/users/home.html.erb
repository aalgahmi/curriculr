<%
if current_user.has_role? :blogger
  add_item_to_app_menu(:home_page, link(:page, :blog_posts, main_app.pages_path))
end

if current_account.config['allow_user_student_dependents']
  add_item_to_app_menu(:home_page, link(:student, :index,  main_app.learn_students_path),
    Student.model_name.human(count: 3))
end

if current_account.config['allow_faculty_applications']
  if !current_user.has_role?(:admin) && !current_user.has_role?(:faculty)
    section = t('page.titles.get_involved')
    faculty_application = FacultyApplication.approved_or_pending(current_user).first
    if faculty_application
      if faculty_application.pending?
        add_item_to_app_menu(:home_page, link(:faculty_application, :become_a_faculty, main_app.edit_faculty_application_path(faculty_application)), section)
      end
    else
      add_item_to_app_menu(:home_page, link(:faculty_application, :become_a_faculty, main_app.new_faculty_application_path), section)
    end
  end
end

if current_user.has_role? :admin
  section = t('page.titles.administration')
  if current_user.id == 1
    add_item_to_app_menu(:home_page, link(:account, :index,  main_app.admin_accounts_path), section)
    if Rails.application.secrets.redis_enabled
      add_item_to_app_menu(:home_page, link_to(:Sidekiq,  main_app.sidekiq_web_path, target: '_new'), section)
    end
  end

  add_item_to_app_menu(:home_page, link(:user, :index, main_app.users_path), section)
  add_item_to_app_menu(:home_page, link(:page, :index, main_app.pages_path), section)
  add_item_to_app_menu(:home_page, link(:medium, :index, main_app.media_path), section)
  add_item_to_app_menu(:home_page, link(:announcement, :index,  main_app.admin_announcements_path), section)

  section = t('page.titles.settings')
  if current_user.id == 1
    add_item_to_app_menu(:home_page, link(:configuration, :site_settings,  main_app.admin_config_edit_path), section)
  end
  if current_user.id == current_account.user_id
    add_item_to_app_menu(:home_page, link(:account, :account_settings,  main_app.edit_admin_account_path(current_account)), section)
  end

  if Rails.application.secrets.redis_enabled
    add_item_to_app_menu(:home_page, link(:translation, :index,  main_app.edit_admin_translation_path(I18n.locale)), section)
  end
end

mountable_fragments :home_page_menu
%>

<div class="row">
  <div class="<%= css_columns(9) %>">
    <% if current_user.has_role?(:admin) %>
      <%= render 'home_admin' %>
    <% elsif current_user.has_role?(:faculty) %>
      <%= render 'home_faculty' %>
    <% else %>
      <%= render 'home' %>
    <% end %>
  </div>
  <div class="<%= css_columns(3) %>">
    <br/>
    <div class="ui fluid card">
      <div class="content">
        <img class="right floated mini ui image" src="<%= current_user.profile.avatar_url(current_account, :med).to_s %>">
        <div class="header">
          <%= current_user.name %>
        </div>
        <div class="meta">
          <%= current_user.email %>
        </div>
        <div class="description">
          <% if current_user.profile.about.present? %>
            <%= markdown(summary(current_user.profile.about, 100)) || 's' %>
          <% else %>
            <%= t('page.text.no_info_to_display') %>
          <% end %>
        </div>
        <br />

        <ul class="list-unstyled">
          <% app_menu(:home_page)[:_].each do |item| %>
            <li><%= item %></li>
          <% end %>
        </ul>

        <ul class="nav nav-pills nav-stacked">
          <% app_menu(:home_page).reject {|k,v| k == :_}.each do |section, menu| %>
            <li><strong><%= section %></strong></li>
            <% menu.each do |item| %>
              <li><%= item %></li>
            <% end %>
          <% end %>
        </ul>
      </div>
      <div class="extra content">
        <%= link(:profile, :edit_profile, main_app.edit_user_path(current_user),
              class: css_button(:block)) %>
      </div>
    </div>
    <%= mountable_fragments :site_300x250_right_bottom_banner %>
  </div>
</div>
