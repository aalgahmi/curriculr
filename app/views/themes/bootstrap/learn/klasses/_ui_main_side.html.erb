<%= link_to main_app.learn_klass_path(@klass) do %>
  <%= image_tag ui_image_src(@klass.course.poster ? @klass.course.poster.at_url(:md) : nil, '/images/holder-md.png'),
        class: "hidden-xs hidden-sm #{css_image(:responsive)}" %>
<% end %>

<%
enrolled = (@klass.enrolled?(current_student) or staff?(current_user, @klass.course))

add_item_to_app_menu :klass_side, link_to(t("page.titles.home").html_safe, main_app.learn_klass_path(@klass),
  class:"#{'active' if controller_name == 'klasses' && action_name == 'show'}")

if @klass.course.config['allow_access_to']['syllabus']
  add_item_to_app_menu :klass_side, link(:page, :syllabus, main_app.learn_klass_page_path(@klass, @klass.course.syllabus),
    class:"#{'active' if @page && @page == @klass.course.syllabus}")
end

if @klass.course.config['allow_access_to']['lectures']
  if (@klass.open? and ((@klass.allow_enrollment and enrolled) or @klass.previewed)) or (@klass.past? and @klass.lectures_on_closed)
    add_item_to_app_menu :klass_side, link_to(t("page.titles.outline").html_safe, main_app.learn_klass_lectures_path(@klass),
      class:"#{'active' if controller_name == 'lectures'}")
  end
end

if @klass.course.config['allow_access_to']['forums']
  if @klass.allow_enrollment and enrolled
    if @klass.open? or @klass.past?
      add_item_to_app_menu :klass_side, link_to(t("page.titles.forums").html_safe, main_app.learn_klass_forums_path(@klass),
        class:"#{'active' if %w(forums topics).include?(controller_name)}")
    end
  end
end

if @klass.course.config['allow_access_to']['assessments']
  if @klass.allow_enrollment and @klass.open? and enrolled
    assessment_links = []

    course_assessments = @klass.course.assessments.where('unit_id is null and ready = TRUE and kind in (:kinds)',
      :kinds => @klass.course.config["grading"]["distribution"]["assessments"]["course"].keys)
    course_assessments.each do |a|
     assessment_links << ( link_to main_app.learn_klass_assessment_path(@klass, a),
        class:"#{'active' if %w(assessments attempts).include?(controller_name) && @assessment && @assessment.id == a.id}" do
        "#{content_tag(:i, '', class: 'fa fa-flask')} #{a.name}".html_safe
      end )
    end if course_assessments.any?

    if assessment_links.present?
      add_item_to_app_menu :klass_side, content_tag(:div , Assessment.model_name.human(count: 3), :class => 'subtitle')
      assessment_links.each do |a|
        add_item_to_app_menu :klass_side, a
      end
    end
  end
end

if @klass.allow_enrollment and @klass.open? and enrolled
  survey_links = []
  surveys = @klass.course.assessments.
    where("unit_id is null and ready = TRUE and kind = 'survey'").
    tagged_with(:on_enroll, :exclude => true)

  surveys.each do |survey|
    if survey.can_be_taken?(@klass, current_student)
      survey_links << link_to(survey.name, main_app.new_learn_klass_assessment_attempt_path(@klass, survey))
    end
  end

  if survey_links.present?
    add_item_to_app_menu :klass_side, content_tag(:div , t('page.titles.surveys'), :class => 'subtitle')
    survey_links.each do |a|
      add_item_to_app_menu :klass_side, a
    end
  end
end

pages_links = []
pages = enrolled ? @klass.course.non_syllabus_pages(true).to_a : @klass.course.non_syllabus_pages(true, true).to_a
if pages.present?
  pages_links << link_to(t("page.titles.pages").html_safe, main_app.learn_klass_pages_path(@klass),
    class:"#{'active' if controller_name == 'pages' && (@page.nil? || @page != @klass.course.syllabus) }")
end

books = enrolled ? @klass.course.books : []
if books.present?
  pages_links << link_to(t('page.titles.attachments').html_safe, main_app.learn_klass_materials_path(@klass),
    class:"#{'active' if controller_name == 'materials' }")
end

if pages_links.present?
  add_item_to_app_menu :klass_side, content_tag(:div , t('page.titles.readings'), :class => 'subtitle')
  pages_links.each do |a|
    add_item_to_app_menu :klass_side, a
  end
end

if @klass.allow_enrollment and enrolled
  reports_links = []
  if @klass.course.config['allow_access_to']['reports']
    if @klass.open? or @klass.past?
      reports_links << link_to(t('activerecord.actions.reports').html_safe, main_app.report_learn_klass_path(@klass),
        class:"#{'active' if controller_name == 'klasses' && action_name == 'report' && params[:student_id].blank?}")
    end
  end

  if !staff?(current_user, @klass.course) and (@klass.open? or @klass.future?) and enrolled
    reports_links << ui_klass_enrollment_action(@klass, :drop)
  end

  if reports_links.present?
    add_item_to_app_menu :klass_side, content_tag(:div, t('page.titles.progress'), :class => 'subtitle')
    reports_links.each do |a|
      add_item_to_app_menu :klass_side, a
    end
  end
end

if @klass and staff?(current_user, @klass.course)
  add_item_to_app_menu :klass_side, content_tag(:div, t('page.titles.for_instructors'), :class => 'subtitle')
  active = if controller_name == 'klasses' && (action_name == 'students' || (action_name == 'report' && params[:student_id]))
    true
  else
    false
  end
  add_item_to_app_menu :klass_side, link_to(t('page.titles.students').html_safe, main_app.students_learn_klass_path(@klass),
            class: "#{'active' if active}")

  add_item_to_app_menu :klass_side, link_to(t('activerecord.actions.dashboard').html_safe, main_app.learn_klass_dashboard_path(@klass),
    class: controller_name == 'dashboard' ? 'active' : nil)
end
%>

<%= mountable_fragments :klass_side_menu %>

<div class="nav-and-social-container">
  <ul>
    <% app_menu(:klass_side)[:_].each do |item| %>
      <li><%= item %></li>
    <% end %>
  </ul>
  <div class='text-center social-buttons'>
  <%= ui_facebook_link(@klass) %>
  <%= ui_twitter_link(@klass) %>
  <%= ui_google_plus_link(@klass) %>
  </div>
</div>
